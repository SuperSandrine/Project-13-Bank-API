swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.2.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error  

  /user/transactions:
    get:
      security:
        - Bearer: []
      tags:
      - "Transactions Module"
      summary: "get all transactions"
      description: "Get in the purpose to display all transactions, with authorization from login, and optional parameters.
      
      Parameters might allowed more flexibility in future display layout and functionnalities of the app with less endpoints at the begining of the API.
      In this way, the user is connected with his token, when he clicked in a transaction button, he sent the account number through it, also the fct date() might called only the current month operations in adding this parameter to the path this way '...user/transactions?account={account_name}&currentMonth={month}'. "
      operationId: "getTransactions"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in : "header"
        description: "Attach Bearer JWT token"
        required: true
        type: "string"
      - name: "account"
        in : "query"
        description: "account name optional, contain 6 numbers and 3 alphabetical letters"
        type: "string"
        pattern: "^[0-9]{6}[a-zA-Z]{3}$"
      - name: "currentMonth"
        in : "query"
        description: "current Month transactions optional"
        type: "string"
        enum: 
        - "january"
        - "february"
        - "march"
        - "april"
        - "mai"
        - "june"
        - "july"
        - "august"
        - "september"
        - "october"
        - "november"
        - "december"
      responses:
        "200":
          description: "successfully obtained transactions."
          schema:
            type: "array"
            items: 
              $ref: '#/definitions/TransactionResponse'
        "204":
          description: "No content found"
        "206":
          description: "Partial content found"
        "400":
          description: "Bad or error in the Request"
        "401":
          description: "User Unauthorizes"
        "404":
          description: "Something not Found"
        "500":
          description: "Internal error server"

  /user/transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
      - "Transactions Module"
      summary: "display transaction's details"
      description: "Display one transaction's details from the transactions id providen"
      operationId: "displayDetailsTransaction"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in : "header"
        description: "Attach Bearer JWT token"
        required: true
        type: "string"
      - name: "transactionId"
        in: "path"
        description: "Id of transaction"
        required: true
        type: "integer"
      responses:
        "200":
          description: "Sucessfully obtained transaction's Details"
          schema: 
            $ref: '#/definitions/TransactionDetailsResponse'
        "400":
          description: "Bad or error in the Request"
        "401":
          description: "User Unauthorizes"
        "404":
          description: "Something not Found"
        "500":
          description: "Internal error server"
          
    put:
      security:
        - Bearer: []
      tags:
      - "Transactions Module"
      summary: "Update transaction's details"
      description: "Update few transaction's details as category or note, with a maximum characters number"
      operationId: "updateDetailsTransaction"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in : "header"
        name: "Authorization"
        description: "Attach Bearer JWT token"
        required: true
        type: "string"
      - in: "path"
        name: "transactionId"
        description: "Id of transaction"
        required: true
        type: "integer"
      - in: "body"
        name: "body"
        description: "Update selected transaction's details "
        required: true
        schema:
          $ref: '#/definitions/TransactionDetails'
      responses:
        "200":
          description: "Sucessfully updated transaction's details"
          schema:
            $ref: '#/definitions/TransactionDetailsResponse'
        "400":
          description: "Bad or error in the Request"
        "401":
          description: "User Unauthorizes"
        "404":
          description: "Something not Found"
        "500":
          description: "Internal error server"
          
    delete:
      security:
        - Bearer: []
      tags:
      - "Transactions Module"
      summary: "Delete transaction details"
      description: "Delete all details of the transaction selected"
      operationId: "deleteDetailsTransaction"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in : "header"
        name: "Authorization"
        description: "Attach Bearer JWT token"
        required: true
        type: "string"
      - in: "path"
        name: "transactionId"
        description: "Id of transaction"
        required: true
        type: "integer"
      responses:
        "200":
          description: "Sucessfully removed details from selected transaction"
          schema:
            $ref: '#/definitions/TransactionDetailsResponse'
        "400":
          description: "Bad or error in the Request"
        "401":
          description: "User Unauthorizes"
        "404":
          description: "Something not Found"
        "500":
          description: "Internal error server"
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  TransactionResponse:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      date:
        type: "string"
        format: "date"
      month:
        type: "string"
      description:
        type: "string"
        description: "company name credited"
      amount:
        type: "integer"
        format: "int64"
      balance: 
        type: "integer"
        format: "int64"
      currency:
        type: "string"
  TransactionDetailsResponse:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      type:
        type: "string"
        enum:
        - "Electronic"
        - "Cash"
        - "Check"
      category:
        type: "string"
      notes:
        type: "string"
  TransactionDetails:
    type: "object"
    properties:
      category:
        type: "string"
        maximum: 20
      notes:
        type: "string"
        maximum: 120
